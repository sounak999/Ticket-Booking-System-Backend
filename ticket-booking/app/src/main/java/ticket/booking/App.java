/*
 * This source file was generated by the Gradle 'init' task
 */
package ticket.booking;

import ticket.booking.entities.Train;
import ticket.booking.entities.User;
import ticket.booking.services.TrainService;
import ticket.booking.services.UserBookingService;

import java.io.IOException;
import java.util.List;
import java.util.Scanner;

public class App {

    public static void main(String[] args) {
        try {
            System.out.println("********** 🚄 Ticket Booking System 🛤️ **********");

            Scanner sc = new Scanner(System.in);
            int option = 0;
            UserBookingService userBookingService;

            try {
                userBookingService = new UserBookingService();
            } catch (IOException ex) {
                System.out.println("Error occurred while initializing the service 😟");
                return;
            }

            while (option != 7) {
                System.out.println("Choose option");
                System.out.println("1. Sign up");
                System.out.println("2. Login");
                System.out.println("3. Fetch Bookings");
                System.out.println("4. Search Trains");
                System.out.println("5. Book a Seat");
                System.out.println("6. Cancel my Booking");
                System.out.println("7. Exit the App");

                option = sc.nextInt();
                sc.nextLine();
                String name, password;
                List<Train> matchingTrains = null;

                switch (option) {
                    case 1:
                        System.out.println("Enter your Name 🙏");
                        name = sc.nextLine();

                        System.out.println("Enter your password 🧑‍💻");
                        password = sc.next();

                        User newUser = new User(name, password);

                        userBookingService.signUp(newUser);
                        System.out.println("User signed up successfully 🚀\n");
                        break;

                    case 2:
                        System.out.println("Enter your Name 🐣");
                        name = sc.nextLine();

                        System.out.println("Enter your password 🗝️");
                        password = sc.next();

                        if (userBookingService.loginUser(name, password)) {
                            System.out.println("User " + name + " logged in successfully ✅");
                        } else {
                            System.out.println("Uh-hu! Invalid credentials. Please try again ❌");
                        }
                        System.out.println();
                        break;

                    case 3:
                        System.out.println("Fetching your bookings... 🤔");
                        userBookingService.fetchBooking();
                        System.out.println();
                        break;

                    case 4:
                        System.out.println("Enter source station 🚉");
                        String source = sc.next();

                        System.out.println("Enter destination station 🚉");
                        String destination = sc.next();

                        matchingTrains = userBookingService.getTrains(source, destination);
                        TrainService.printTrainDetails(matchingTrains);

                        break;

                    default:
                        System.out.println("Invalid option. Please try again!!!");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Error: " + e.getMessage());
        }
    }
}
